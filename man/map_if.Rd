% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/map.R
\name{map_if}
\alias{map_if}
\title{Modify elements where predicate is satisified.}
\usage{
map_if(.x, .p, .f, ...)
}
\arguments{
\item{.x}{A list or vector.}

\item{.p}{A single predicate function, a formula describing such a
predicate function, or a logical vector of the same length as \code{.x}.
Alternatively, if the elements of \code{.x} are themselves lists of
objects, a string indicating the name of a logical element in the
inner lists. Only those elements where \code{.p} evaluates to
\code{TRUE} will be modified, kept or discarded.}

\item{.f}{A function, formula or string.

  If a function, it is used as is.

  If a formula, e.g. \code{~ x + 2}, it is converted to a function with
  a single argument, \code{x}, e.g. \code{function(x) x + 2}. This is less
  typing for very simple anonymous functions.

  If a string, e.g. \code{"y"}, it is converted to an extractor function,
  \code{function(x) x[["y"]]}.}

\item{...}{Additional arguments passed on to \code{.f}.}
}
\value{
The same type of object as \code{.x}.
}
\description{
Modify elements where predicate is satisified.
}
\examples{
list(x = rbernoulli(100), y = 1:100) \%>\%
  zip() \%>\%
  map_if("x", ~ update_list(., y = ~ y * 100)) \%>\%
  unzip() \%>\%
  map(flatten)

# Convert factors to characters
iris \%>\%
  map_if(is.factor, as.character) \%>\%
  str()
}

