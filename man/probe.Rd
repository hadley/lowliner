% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/probe.R
\name{probe}
\alias{probe}
\title{Interrogate the elements of a list with a predicate function.}
\usage{
probe(.x, .p, ...)
}
\arguments{
\item{.x}{A list or vector.}

\item{.p}{A single predicate function, a formula describing such a
predicate function, or a logical vector of the same length as \code{.x}.
Alternatively, if the elements of \code{.x} are themselves lists of
objects, a string indicating the name of a logical element in the
inner lists. Only those elements where \code{.p} evaluates to
\code{TRUE} will be modified.}

\item{...}{Additional arguments passed on to \code{.f}.}
}
\value{
A logical vector.
}
\description{
\code{probe} applies a predicate to each element of a list or a vector
and returns a logical vector.
}
\examples{
# To switch numeric vectors to character ones and vice versa using map_if(),
# we first need to record a logical vector. Using a predicate function in both
# map_if() calls would not work since they change the list contents.
l <- list(a = 1, b = "2", c = "3")

is_character <- probe(l, is.character)
l <- l \%>\%
  map_if(is_character, as.numeric) \%>\%
  map_if(!is_character, as.character)
}

