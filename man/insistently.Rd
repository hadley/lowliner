% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rate.R
\name{insistently}
\alias{insistently}
\title{Transform a function to make it run insistently}
\usage{
insistently(.f, quiet = TRUE, max_attempts = 5, wait_seconds = 0.1)
}
\arguments{
\item{.f}{A function, formula, or vector (not necessarily atomic).

If a \strong{function}, it is used as is.

If a \strong{formula}, e.g. \code{~ .x + 2}, it is converted to a function. There
are three ways to refer to the arguments:
\itemize{
\item For a single argument function, use \code{.}
\item For a two argument function, use \code{.x} and \code{.y}
\item For more arguments, use \code{..1}, \code{..2}, \code{..3} etc
}

This syntax allows you to create very compact anonymous functions.

If \strong{character vector}, \strong{numeric vector}, or \strong{list}, it is
converted to an extractor function. Character vectors index by
name and numeric vectors index by position; use a list to index
by position and name at different levels. If a component is not
present, the value of \code{.default} will be returned.}

\item{quiet}{Hide errors (\code{TRUE}, the default), or display them
as they occur?}

\item{max_attempts}{Positive integer. Functions wrapped by \code{insistently()}
will try to run this many times before giving up.}

\item{wait_seconds}{Positive number. Base multiplier for time in seconds to
wait between attempts. The time increases exponentially, with a wait time
randomly chosen from a uniform distribution between \code{0} and
\code{wait_seconds * 2 ^ (i - 1)} seconds, between the \code{i}th and
\code{i + 1}th attempts.}
}
\value{
Wrapped function attempts to run \code{max_attempts} times; an
error occurs if all attempts fail.
}
\description{
Transform a function to make it run insistently
}
\examples{
# insistently() makes a function repeatedly try to work
risky_runif <- function(lo = 0, hi = 1) {
  y <- runif(1, lo, hi)
  if(y < 0.9) {
    stop(y, " is too small")
  }
  y
}
insistent_risky_runif <- insistently(
  risky_runif, quiet = FALSE, wait_seconds = 0.01)
set.seed(1)
insistent_risky_runif()
set.seed(3)
try(insistent_risky_runif())

# insistently() and possibly() are a useful combination
possibly_insistent_risky_runif <- possibly(
  insistently(risky_runif, quiet = FALSE, wait_seconds = 0.01),
  otherwise = -99)

set.seed(1)
possibly_insistent_risky_runif()
set.seed(3)
possibly_insistent_risky_runif()
}
\seealso{
\code{\link[httr:RETRY]{httr::RETRY()}} is a special case of \code{\link[=insistently]{insistently()}}
for HTTP verbs.
}
